<?php
// $Id:
// "MultiLanguage Links" (MultiLink) module for Drupal 6.
// License: http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
// Support: Commercial support and customization is available from www.netgenius.co.uk
// Contact: www.netgenius.co.uk/contact or email drupal at netgenius.co.uk

/**
 * Implementation of hook_perm().
 */
function multilink_redirect_perm() {
  return array('bypass multilink redirect');
}

/*
 * Check if path is node/nid and return nid or FALSE.
 */
function multilink_redirect_node($path) {
  $pattern = '!^node/([1-9]\d*)/?$!';
  $ret = (preg_match($pattern, $path, $matches) != 0)? $matches[1] : FALSE;
  //drupal_set_message('matches: ' . print_r($matches, 1));
  return $ret;
}

/*
 * Return the path actually requested, including protocol.
 */
function multilink_redirect_qpath() {
  //See: http://php.net/manual/en/reserved.variables.server.php
  $http = (empty($_SERVER['HTTPS']) || $_SERVER['HTTPS'] == 'off')? 'http' : 'https';
  $fmt = variable_get('clean_url', '0')? '%s://%s/%s' : '%s://%s/?q=%s';
  return sprintf($fmt, $http, $_SERVER['HTTP_HOST'], $_REQUEST['q']);
}

function multilink_redirect_init() {

  // Get requested internal system path (without language prefix).
  $path = $_GET['q'];
  // Get actual requested path with requested protocol.
  $qpath = multilink_redirect_qpath();

  if ($nid = multilink_redirect_node($path)) {
    $link = _multilink_getnode($nid);
    $rpath = 'node/' . $link->nid;
    //if ($nid != $link->nid)  drupal_set_message(sprintf('Node redirect %s to %s', $nid, $link->nid), 'error');
    // Is $rpath the front page?  See: http://api.drupal.org/api/function/drupal_is_front_page/6
    if ($rpath == drupal_get_normal_path(variable_get('site_frontpage', 'node'))) $rpath = '';
  }
  else {
    // Is this the front page?  See: http://api.drupal.org/api/function/drupal_is_front_page/6
    $rpath = ($path && drupal_is_front_page())? '' : $path;
  }

  // Get final target url for any redirect.
  // Note: url() gets the most recently added alias (if more than one.)
  $rpath = multilink_url($rpath, TRUE);
  // If requested and target urls are different we need to redirect.
  // Note use rawurldecode to double-check, in case of any weird characters in request.
  if ($rpath != $qpath && rawurldecode($rpath) != $qpath) {

    // Only redirect if $_POST is empty and processing main index.php.
    if (empty($_POST) && $_SERVER['SCRIPT_NAME'] == '/index.php') {
      // Fix some compatibility issues when SecurePages is active.
      if (function_exists('multilink_securepages_redirect_fix')) {
        multilink_securepages_redirect_fix($rpath);
      }

      // Get the Query String (minus the 'q').
      $qstring = rawurldecode(drupal_query_string_encode($_GET, array('q')));

      $perm = 'bypass multilink redirect';
      // Bypass if user has permission - show message instead of redirecting.
      if (user_access($perm)) {
        if ($qstring) {
          $rpath .= (variable_get('clean_url', '0')? '?' : '&') . $qstring;
        }
        $tvars = array(
          '%module' => 'MultiLink Redirect',
          '!link' => sprintf('<a href=%s>%s</a>', $rpath, $rpath),
          '%perm' => $perm,
        );
          
        drupal_set_message(t('%module: redirect to !link (not done due to %perm permission.)', $tvars), 'warning');
      }
      // Else, do the redirect.
      else {
        drupal_goto($rpath, $qstring, null, 301);
      }
    }
  }
}

// --- Drupal docs advise NOT closing PHP tags ---
